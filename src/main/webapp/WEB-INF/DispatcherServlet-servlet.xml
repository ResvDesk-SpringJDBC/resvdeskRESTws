<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       	http://www.springframework.org/schema/context
 		http://www.springframework.org/schema/context/spring-context-3.2.xsd
       	http://www.springframework.org/schema/mvc
       	http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

    <!-- Activates various annotations to be detected in bean classes -->
    <context:annotation-config/>

    <context:component-scan base-package="com.telappoint.resvdeskrestws.frontend.controller"/>
    <context:component-scan base-package="com.telappoint.resvdeskrestws.admin.controller"/>
    <context:component-scan base-package="com.telappoint.resvdeskrestws.notification.controller"/>

    <mvc:resources mapping="/resources/**" location="/src/main/resources/"/>


    <!-- <context:property-placeholder location="/WEB-INF/message.properties"/>-->

    <mvc:annotation-driven content-negotiation-manager="contentNegotiationManager" />

    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="favorPathExtension" value="false" />
        <property name="favorParameter" value="false" />
        <property name="ignoreAcceptHeader" value="false" />
        <property name="defaultContentType" value="application/json" />
        <property name="mediaTypes">
            <value>
                json=application/json
                xml=application/xml
                html=text/html
                *=*/*
            </value>
        </property>
    </bean>
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <!-- NOTE: it is important to specify the order property, so this adapter
            will be attempted before the HandlerAdapter that Spring MVC automatically
            configures. This is because a MappingJacksonHttpMessageConverter is registered
            automatically with the default adapter that will attempt to handle any Java
            object including BufferedImage. -->
        <property name="order" value="1"/>
        <property name="messageConverters">
            <list>
                <!-- Default converters -->
                <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.FormHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter"/>

                <!-- Converter for images -->
                <bean class="org.springframework.http.converter.BufferedImageHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.ResourceHttpMessageConverter"/>

                <!-- This must come after our image converter -->
                <bean class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"/>
            </list>
        </property>
    </bean>

    <bean id="handlerMapping"
          class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>

</beans>
